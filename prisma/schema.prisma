generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
	id      Int    @id @default(autoincrement())
	moves   Move[]
	pgns    Pgn[]
	history StudyHistory[]
}

model Move {
	id              Int    @id @default(autoincrement())
	user            User   @relation( fields: [userId], references: [id] )
	userId          Int
	repForWhite     Boolean // true if move(+pgn) belong to White repertoire. white/black enum would have been preferred, but is not supported by prisma+sqlite.
	fromFen         String
	toFen           String
	moveSan         String
	pgns            Pgn[]
	ownMove         Boolean // true if this is a move by the user, e.g. 1. e4 in a White repertoire
	learningDueTime DateTime? @default(now())
	learningStep    Int?  @default(0)
	reviewDueDate   DateTime? // only date, at midnight (UTC?)
	reviewInterval  Float?
	reviewEase      Float?
	history         StudyHistory[]

	@@unique([ userId, repForWhite, fromFen, toFen ])
}

model Pgn {
	id          Int      @id @default(autoincrement())
	user        User     @relation( fields: [userId], references: [id] )
	userId      Int
	repForWhite Boolean // true if pgn belongs to White repertoire (or false if to Black repertoire)
	filename    String
	uploaded    DateTime @default(now())
	content     String
	moves       Move[]
}

model StudyHistory {
	id                 Int      @id @default(autoincrement())
	user               User     @relation( fields: [userId], references: [id] )
	userId             Int
	move               Move     @relation( fields: [moveId], references: [id] )
	moveId             Int
	studiedAt          DateTime @default(now())
	incorrectGuessSan  String?  // guess if it was wrong, null if it was right
}
